{"componentChunkName":"component---src-templates-blog-post-js","path":"/JavaScript/callby-value-reference/","result":{"data":{"site":{"siteMetadata":{"title":"leo-xee.io","author":"Leo-Xee","siteUrl":"https://leo-xee.github.io","comment":{"disqusShortName":"","utterances":"leo-xee/blog-comments"},"sponsor":{"buyMeACoffeeId":"leoxexe"}}},"markdownRemark":{"id":"ba893251-6dac-52f0-a5fb-f6d8141a4323","excerpt":"와 는 함수의 인자(argument)로 변수가 들어와서 매개변수(parameter)로 전달되는 경우에 어떤 방식으로 전달되는지를 결정하는 방식이다. 일단 인자와 매개변수의 개념부터 정리하고 본론으로 넘어가겠다. 인자와 매개변수 인자(argument)는 어떤 함수가 호출될 때 전달되는 값을 의미하고 매개변수(parameter)는 전달된 값을 받아들이는 변수를 의미한다. Call by value Call by value…","html":"<p><img src=\"/b6422d8815031d57cf3948e4032caf37/thumbNail.gif\"></p>\n<p><strong><code class=\"language-text\">call by value</code>와 <code class=\"language-text\">call by reference</code>는 함수의 인자(argument)로 변수가 들어와서 매개변수(parameter)로 전달되는 경우에 어떤 방식으로 전달되는지를 결정하는 방식이다.</strong> 일단 인자와 매개변수의 개념부터 정리하고 본론으로 넘어가겠다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// a과 b는 매개변수(parameter)</span>\n  <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 10과 20은 인자(argument)</span></code></pre></div>\n<h1 id=\"인자와-매개변수\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%EC%9E%90%EC%99%80-%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98\" aria-label=\"인자와 매개변수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인자와 매개변수</h1>\n<p>인자(argument)는 어떤 함수가 호출될 때 전달되는 값을 의미하고 매개변수(parameter)는 전달된 값을 받아들이는 변수를 의미한다.</p>\n<h1 id=\"call-by-value\" style=\"position:relative;\"><a href=\"#call-by-value\" aria-label=\"call by value permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Call by value</h1>\n<p><strong>Call by value는 말 그대로 복사된 값을 인자로 넘겨서 매개변수로 전달하는 방식이다.</strong> 자바스크립트의 기본형 변수 타입(Primitive type)의 경우에는 call by value 방식으로 전달된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">param</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  param <span class=\"token operator\">=</span> param <span class=\"token operator\">*</span> <span class=\"token number\">10</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 50</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> num <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n\n<span class=\"token function\">foo</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 5</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">num</code> 의 값이 복사되어서 <code class=\"language-text\">foo</code> 함수의 매개변수로 전달된다.</li>\n<li>전달된 매개변수는 함수의 지역변수가 되고 이를 변경해도 원본에 영향을 주지 않는다.</li>\n</ul>\n<h1 id=\"call-by-reference\" style=\"position:relative;\"><a href=\"#call-by-reference\" aria-label=\"call by reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Call by Reference</h1>\n<p><strong>Call by reference는 실제의 원본 데이터가 위치하는 주소의 값을 인자로 넘겨서 매개변수로 전달하는 방식이다.</strong> 참조형 변수 타입(Reference type)인 <code class=\"language-text\">Object</code>, <code class=\"language-text\">Array</code>, <code class=\"language-text\">Function</code>… 등이 Call by reference 방식으로 전달된다.</p>\n<p><strong>하지만 자바스크립트에서 Call By Reference는 완전하지 않다!!!</strong> 아래의 예시를 보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj1<span class=\"token punctuation\">,</span> obj2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  obj1<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> <span class=\"token string\">'Bye'</span>\n  obj2 <span class=\"token operator\">=</span> <span class=\"token string\">'Bye'</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> a<span class=\"token operator\">:</span> <span class=\"token string\">'Hello'</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> obj2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> a<span class=\"token operator\">:</span> <span class=\"token string\">'Hello'</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">foo</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">,</span> obj2<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span> <span class=\"token comment\">// { a: 'Bye' }   - Call by Reference로 동작</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span> <span class=\"token comment\">// { a: 'Hello' } - 동작 안함</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">obj1</code> 과 <code class=\"language-text\">obj2</code> 의 주소값을 <code class=\"language-text\">foo</code> 함수의 인자로 넘겨서 매개변수로 전달한다.</li>\n<li>전달된 매개변수 <code class=\"language-text\">obj1</code> 의 프로퍼티 값을 변경하면 정상적으로 원본의 프로퍼티 값이 변경된다.</li>\n<li>전달된 매개변수 <code class=\"language-text\">obj2</code> 의 <strong>주소값 자체를 변경하는 것은 불가능</strong>하기 때문에 동작하지 않는다. 자세히 말하면 자바스크립트의 경우에는 객체의 프로퍼티 값이 아닌 객체 자체의 변경을 허용하지 않는다. 그 이유는 겉보기에는 주소값을 참조하는 듯이 보이지만 실제로는 주소값의 복사본을 만들어서 전달하기 때문이다.</li>\n</ul>\n<h1 id=\"자바스크립트는-call-by-sharing\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%8A%94-call-by-sharing\" aria-label=\"자바스크립트는 call by sharing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바스크립트는 Call by Sharing</h1>\n<p>위의 예시들을 정리해보자면 다음과 같다.</p>\n<ul>\n<li>기본형 타입의 경우에는 Call by value로 동작한다.</li>\n<li>참조형 타입의 경우에는 Call by Reference로 동작하지만 완전하지 않다.</li>\n<li>혼용해서 사용하기 때문에 자바스크립트는 <strong>Call By Sharing으로 동작</strong>한다고 말한다.</li>\n</ul>\n<br/>","frontmatter":{"title":"[JS] Call by value와 Call by reference","date":"February 16, 2022"}}},"pageContext":{"slug":"/JavaScript/callby-value-reference/","previous":{"fields":{"slug":"/React/react-setup-eslint/"},"frontmatter":{"title":"밑바닥부터 React 개발 환경 구축하기 - 3. Eslint와 Prettier"}},"next":{"fields":{"slug":"/Error/prettier-crlf/"},"frontmatter":{"title":"Error: Prettier 에러를 발생시키는 CR과 LF의 차이"}}}}}