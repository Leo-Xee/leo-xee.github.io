{"componentChunkName":"component---src-templates-blog-post-js","path":"/PS/b1157/","result":{"data":{"site":{"siteMetadata":{"title":"leo-xee.io","author":"Leo-Xee","siteUrl":"https://leo-xee.github.io","comment":{"disqusShortName":"","utterances":"leo-xee/blog-comments"},"sponsor":{"buyMeACoffeeId":"leoxexe"}}},"markdownRemark":{"id":"0b2ff716-527e-58cf-97ee-215a0620ad3b","excerpt":"🔗 문제 링크 1157 - 단어 공부 📝 문제 설명 알파벳 대소문자로 된 단어가 주어지면, 이 단어에서 가장 많이 사용된 알파벳이 무엇인지 알아내는 프로그램을 작성하시오. 단, 대문자와 소문자를 구분하지 않는다. 🔑 문제 풀이 일단 대소문자의 구분을 하지 않기 때문에 를 사용해서 을 모두 소문자로 바꿔준다. 그 다음 a-z의 카운트값을 저장할 배열을 만들고 UTF-16 코드값의 범위가 97 - 12…","html":"<p><img src=\"/b8eabae6febc68775813f017d785358d/thumbNail.gif\"></p>\n<h1 id=\"-문제-링크\" style=\"position:relative;\"><a href=\"#-%EB%AC%B8%EC%A0%9C-%EB%A7%81%ED%81%AC\" aria-label=\" 문제 링크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔗 문제 링크</h1>\n<p><a href=\"https://www.acmicpc.net/problem/1157\">1157 - 단어 공부</a></p>\n<h1 id=\"-문제-설명\" style=\"position:relative;\"><a href=\"#-%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\" 문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 문제 설명</h1>\n<p>알파벳 대소문자로 된 단어가 주어지면, 이 단어에서 가장 많이 사용된 알파벳이 무엇인지 알아내는 프로그램을 작성하시오. 단, 대문자와 소문자를 구분하지 않는다.</p>\n<h1 id=\"-문제-풀이\" style=\"position:relative;\"><a href=\"#-%EB%AC%B8%EC%A0%9C-%ED%92%80%EC%9D%B4\" aria-label=\" 문제 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔑 문제 풀이</h1>\n<p>일단 대소문자의 구분을 하지 않기 때문에 <code class=\"language-text\">String.toLowerCase()</code>를 사용해서 <code class=\"language-text\">input</code>을 모두 소문자로 바꿔준다.</p>\n<p>그 다음 a-z의 카운트값을 저장할 배열을 만들고 UTF-16 코드값의 범위가 97 - 122이기 때문에 이 범위만큼 <code class=\"language-text\">for문</code>을 돌아 <code class=\"language-text\">input</code>의 각 자리를 <code class=\"language-text\">String.prototype.charCodeAt()</code>로 변환한 코드값과 비교해서 동일한 경우에 해당 알파벳의 카운트값을 <code class=\"language-text\">1</code>만큼 증가시켜 배열에 추가한다.</p>\n<p>그리고 <code class=\"language-text\">Math.max()</code>와 <code class=\"language-text\">Array.prototype.indexOf()</code>를 사용해서 배열의 최대값과 그 인덱스를 구한다. 최대값이 동일한 알파벳이 존재하는 경우에는 <code class=\"language-text\">?</code>를 출력해야 하기 때문에 다시 배열에 <code class=\"language-text\">forEach문</code>를 돌려서 존재한다면 <code class=\"language-text\">isSameCnt</code>에 <code class=\"language-text\">true</code>를 저장한다.</p>\n<p><code class=\"language-text\">isSameCnt</code>가 <code class=\"language-text\">true</code>이면 <code class=\"language-text\">?</code>를 출력하고 아니면 대문자로 출력해야하므로 <code class=\"language-text\">index</code>에 <code class=\"language-text\">65</code>를 더한 값을 <code class=\"language-text\">String.prototype.charCodeAt()</code>를 사용해 문자열로 변환해 출력한다.</p>\n<h1 id=\"-소스-코드\" style=\"position:relative;\"><a href=\"#-%EC%86%8C%EC%8A%A4-%EC%BD%94%EB%93%9C\" aria-label=\" 소스 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>💻 소스 코드</h1>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> filePath <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>platform <span class=\"token operator\">===</span> <span class=\"token string\">'linux'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'/dev/stdin'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'./input.txt'</span>\n<span class=\"token keyword\">const</span> input <span class=\"token operator\">=</span> fs\n  <span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> cnts <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">97</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">122</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> cnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> input<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">===</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">charCodeAt</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      cnt<span class=\"token operator\">++</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  cnts<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>cnt<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> max <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>cnts<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> index <span class=\"token operator\">=</span> cnts<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>max<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">let</span> isSameCnt <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n\ncnts<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">val<span class=\"token punctuation\">,</span> idx</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>val <span class=\"token operator\">===</span> max <span class=\"token operator\">&amp;&amp;</span> idx <span class=\"token operator\">!==</span> index<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    isSameCnt <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>isSameCnt <span class=\"token operator\">?</span> <span class=\"token string\">'?'</span> <span class=\"token operator\">:</span> String<span class=\"token punctuation\">.</span><span class=\"token function\">fromCharCode</span><span class=\"token punctuation\">(</span>index <span class=\"token operator\">+</span> <span class=\"token number\">65</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h1 id=\"️-피드백\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%ED%94%BC%EB%93%9C%EB%B0%B1\" aria-label=\"️ 피드백 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🤦🏻‍♂️ 피드백</h1>\n<p>다른 분들의 코드를 보고 <code class=\"language-text\">for문</code> 부분을 다음과 같이 개선하면 좋은 것 같다는 생각이 들었다.</p>\n<h2 id=\"이중-for문을-최대한-사용하지-않기\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EC%A4%91-for%EB%AC%B8%EC%9D%84-%EC%B5%9C%EB%8C%80%ED%95%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EC%A7%80-%EC%95%8A%EA%B8%B0\" aria-label=\"이중 for문을 최대한 사용하지 않기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이중 for문을 최대한 사용하지 않기</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> cnts <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> input<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  cnts<span class=\"token punctuation\">[</span>input<span class=\"token punctuation\">.</span><span class=\"token function\">charCodeAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">97</span><span class=\"token punctuation\">]</span><span class=\"token operator\">++</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"더-이상의-반복이-의미-없을-경우에-빠져나오기\" style=\"position:relative;\"><a href=\"#%EB%8D%94-%EC%9D%B4%EC%83%81%EC%9D%98-%EB%B0%98%EB%B3%B5%EC%9D%B4-%EC%9D%98%EB%AF%B8-%EC%97%86%EC%9D%84-%EA%B2%BD%EC%9A%B0%EC%97%90-%EB%B9%A0%EC%A0%B8%EB%82%98%EC%98%A4%EA%B8%B0\" aria-label=\"더 이상의 반복이 의미 없을 경우에 빠져나오기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>더 이상의 반복이 의미 없을 경우에 빠져나오기</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">26</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cnts<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> max <span class=\"token operator\">&amp;&amp;</span> index <span class=\"token operator\">!=</span> j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    isSameCnt <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n    <span class=\"token keyword\">break</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br/>","frontmatter":{"title":"[백준/JS] 1157번 - 단어 공부","date":"December 04, 2021"}}},"pageContext":{"slug":"/PS/b1157/","previous":{"fields":{"slug":"/PS/b2675/"},"frontmatter":{"title":"[백준/JS] 2675번 - 문자열 반복"}},"next":{"fields":{"slug":"/Error/yarn-concurrently/"},"frontmatter":{"title":"Error: listen EADDRINUSE: address already in use :::Port"}}}},"staticQueryHashes":["2486386679","3128451518"]}