{"componentChunkName":"component---src-templates-blog-post-js","path":"/PS/b1316/","result":{"data":{"site":{"siteMetadata":{"title":"leo-xee.io","author":"Leo-Xee","siteUrl":"https://leo-xee.github.io","comment":{"disqusShortName":"","utterances":"leo-xee/blog-comments"},"sponsor":{"buyMeACoffeeId":"leoxexe"}}},"markdownRemark":{"id":"0a5af6e5-9a46-5dfd-8758-70fba45104f4","excerpt":"🔗 문제 링크 1316 - 그룹 단어 체커 📝 문제 설명 그룹 단어란 단어에 존재하는 모든 문자에 대해서, 각 문자가 연속해서 나타나는 경우만을 말한다. 예를 들면, ccazzzzbb는 c, a, z, b가 모두 연속해서 나타나고, kin도 k, i, n이 연속해서 나타나기 때문에 그룹 단어이지만, aabbbccb는 b가 떨어져서 나타나기 때문에 그룹 단어가 아니다. 단어 N…","html":"<p><img src=\"/b8eabae6febc68775813f017d785358d/thumbNail.gif\"></p>\n<h1 id=\"-문제-링크\" style=\"position:relative;\"><a href=\"#-%EB%AC%B8%EC%A0%9C-%EB%A7%81%ED%81%AC\" aria-label=\" 문제 링크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔗 문제 링크</h1>\n<p><a href=\"https://www.acmicpc.net/problem/1316\">1316 - 그룹 단어 체커</a></p>\n<h1 id=\"-문제-설명\" style=\"position:relative;\"><a href=\"#-%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\" 문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 문제 설명</h1>\n<p>그룹 단어란 단어에 존재하는 모든 문자에 대해서, 각 문자가 연속해서 나타나는 경우만을 말한다. 예를 들면, ccazzzzbb는 c, a, z, b가 모두 연속해서 나타나고, kin도 k, i, n이 연속해서 나타나기 때문에 그룹 단어이지만, aabbbccb는 b가 떨어져서 나타나기 때문에 그룹 단어가 아니다.</p>\n<p>단어 N개를 입력으로 받아 그룹 단어의 개수를 출력하는 프로그램을 작성하시오.</p>\n<h1 id=\"-문제-풀이\" style=\"position:relative;\"><a href=\"#-%EB%AC%B8%EC%A0%9C-%ED%92%80%EC%9D%B4\" aria-label=\" 문제 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔑 문제 풀이</h1>\n<p>테스트케이스 <code class=\"language-text\">N</code>번만큼 순회하고 내부에서 주어지는 단어의 길이만큼 순회한다.</p>\n<p>일단 현재 문자와 이전까지의 문자열을 비교를 해야하기 때문에 <code class=\"language-text\">str</code>에 빈 문자열을 초기화해주고 그룹 단어의 여부를 체크하기 위해서 <code class=\"language-text\">isGroupword</code>에 true로 초기화해준다.</p>\n<p>그룹 단어는 현재 문자가 이전까지의 문자열에 포함되어 있지 않아야하고 포함되어 있다면 직전의 문자와 동일해야한다.\n그렇기 때문에 현재 검사하고 있는 문자가 이전까지의 문자열에 포함되어 있지 않을 때에만 <code class=\"language-text\">str</code>에 해당 문자를 추가해준다. 이렇게 하면 서로 다른 문자만 <code class=\"language-text\">str</code>에 추가될 것이다.</p>\n<p>현재 문자가 문자열에 포함되어 있지 않는 경우에는 문자열에서 해당 문자의 인덱스값과 문자열의 길이 - 1의 값이 같으면 직전 문자와 동일함을 의미하고 다르면 해당 문자가 직전 문자가 아니라는 것을 의미한다. 여기서 그룹 단어가 아닌 단어를 탈락시켜줘야하기 때문에 값이 다를 경우에 <code class=\"language-text\">isGroupword</code>를 <code class=\"language-text\">false</code>로 변경해준다.</p>\n<p>그리고 단어에 대한 <code class=\"language-text\">for문</code>이 종료되기 전에 <code class=\"language-text\">isGroupword</code>가 <code class=\"language-text\">true</code>일 경우에만 카운트를 올려주면 된다.</p>\n<p>나는 <code class=\"language-text\">Boolean 변수</code>를 사용하지 않고 풀려다가 시간을 많이 낭비했는데 앞으로 특정 조건인지를 검사를 할 때는 사용을 고려해야겠다.</p>\n<h1 id=\"-소스-코드\" style=\"position:relative;\"><a href=\"#-%EC%86%8C%EC%8A%A4-%EC%BD%94%EB%93%9C\" aria-label=\" 소스 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>💻 소스 코드</h1>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> filePath <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>platform <span class=\"token operator\">===</span> <span class=\"token string\">'linux'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'/dev/stdin'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'./input.txt'</span>\n<span class=\"token keyword\">let</span> input <span class=\"token operator\">=</span> fs\n  <span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">N</span> <span class=\"token operator\">=</span> <span class=\"token operator\">+</span>input<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token constant\">N</span><span class=\"token punctuation\">,</span> input</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> cnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token constant\">N</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> word <span class=\"token operator\">=</span> input<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">let</span> str <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n    <span class=\"token keyword\">let</span> isGroupword <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> word<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 지금까지의 문자열에 해당 문자가 없는 경우</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>word<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        str <span class=\"token operator\">+=</span> word<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 해당 문자가 직전 문자와 다를 경우(그룹 단어)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>word<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> str<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          isGroupword <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n          <span class=\"token keyword\">break</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isGroupword<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      cnt<span class=\"token operator\">++</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> cnt\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token constant\">N</span><span class=\"token punctuation\">,</span> input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>","frontmatter":{"title":"[백준/JS] 1316번 - 그룹 단어 체커","date":"December 12, 2021"}}},"pageContext":{"slug":"/PS/b1316/","previous":{"fields":{"slug":"/PS/b2941/"},"frontmatter":{"title":"[백준/JS] 2941번 - 크로아티아 알파벳"}},"next":{"fields":{"slug":"/JavaScript/prototype/"},"frontmatter":{"title":"[JS] 프로토타입"}}}},"staticQueryHashes":["2486386679","3128451518"]}